[package]
name = "onnx_phi_rs"
description = "How to run Phi models with onnxruntime (alone) in Rust"
version = "0.0.1"
edition = "2021"
rust-version = "1.83"
license = "MIT OR Apache-2.0"
repository = "https://github.com/maulberto3/onnx_phi_rs"
# homepage = "https://ort.pyke.io/"
readme = "README.md"
keywords = [ "onnx","onnxruntime", "ort", "phi", "llm" ]
categories = [ "deep learning", "machine learning", "inference" ]
authors = ["Mauricio Maroto maulberto3@hotmail.com"]
include = [ "src/", "benches/", "README.md" ]
# exclude = [
#     ".cargo/**",
#     ".devcontainer/**",
#     ".github/**",
#     "assets/**",
#     "*.orig",
#     "Makefile",
#     "dependencies_graph_of_current_cargo_toml.png",
# ]

[dependencies]
ort = { version = "2.0.0-rc.9", default-features = false, features = ["load-dynamic"] }
rand = "0.8.5"
tokenizers = "0.21.0"
rand_distr = "0.4.3"
clap = { version = "4.5.23", features = ["derive"] }
# validator = { version = "0.19.0", features = ["derive"] }
# serde = "1.0.216"
# anyhow = { version = "1.0.86" }

[dev-dependencies]
pprof = { version = "0.13", features = ["flamegraph"] }
criterion = { version = "0.5.1", features = ["html_reports"] }

[profile.dev]
opt-level = 0
debug = 0
lto = false
codegen-units = 256
incremental = true

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = 'abort'



# [workspace]
# members = [
# 	'ort-sys',
# 	'examples/async-gpt2-api',
# 	'examples/custom-ops',
# 	'examples/gpt2',
# 	'examples/model-info',
# 	'examples/yolov8',
# 	'examples/phi-3-vision',
# 	'examples/phi3',
# 	'examples/modnet',
# 	'examples/sentence-transformers',
# 	'examples/training'
# ]
# default-members = [
# 	'.',
# 	'examples/async-gpt2-api',
# 	'examples/custom-ops',
# 	'examples/gpt2',
# 	'examples/model-info',
# 	'examples/phi3',
# 	'examples/yolov8',
# 	'examples/modnet',
# 	'examples/sentence-transformers'
# ]
# exclude = [ 'examples/cudarc' ]
